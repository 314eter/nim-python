from sage.rings.integer cimport Integer

cdef zero = Integer(0)
cdef two = Integer(2)

cpdef Integer knight(int n, Integer k_n):
    cdef Integer w, t0, t, m, i, maxi, x0, maxx0
    cdef int u
    for u in range(2**n):
        w = two**u
        t0 = zero
        while t0 < w:
            t = w + t0
            prods.clear()
            m = nimproduct(two**(2**n - 1), nimproduct(t, t))
            i = zero
            maxi = two**(2**n - u - 1)
            while i < maxi:
                x0 = i * 2 * w
                maxx0 = i * 2 * w + w
                while x0 < maxx0:
                    if m ^ prod(x0, t) == k_n:
                        return t * two**(2**n) + x0
                    x0 += 1
                i += 1
            t0 += 1

cdef dict prods = dict()
cdef dict squares = dict()

cdef Integer prod(Integer x, Integer t):
    cdef Integer result = zero
    cdef int l = x.nbits()
    for exp in range(l):
        if x.test_bit(exp):
            if exp not in prods:
                if exp not in squares:
                    squares[exp] = nimproduct(two**exp, two**exp)
                prods[exp] = squares[exp] ^ nimproduct(t, two**exp)
            result ^= prods[exp]
    return result

